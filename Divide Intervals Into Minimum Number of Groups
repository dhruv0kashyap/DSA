class Solution {
    public int minGroups(int[][] intervals) {
          Arrays.sort(intervals,(a,b)->{
            return a[0]-b[0];
        });

        PriorityQueue<Integer> minHeap = new PriorityQueue<>();

        int i=0;
        while(i<intervals.length){

            int currentEnd=intervals[i][1];
            int currentStart = intervals[i][0];

            if(i==0){
                //just put endpoint in the heap
                minHeap.add(currentEnd);
            }
            else{

                if(currentStart>minHeap.peek()){
                    //can be grouped
                    minHeap.poll();
                    minHeap.add(currentEnd);
                }
                 else{
                    minHeap.add(currentEnd);
                }

            }
            i++;

        }

        return minHeap.size();

        
    }
}
